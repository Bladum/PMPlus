from globe.location import TLocation
from .site_type import TSiteType


class TSite(TLocation):
    """
    Represents a mission location on the world map that is not a UFO or a base.

    Sites are static, temporary locations that represent mission opportunities.
    When a mission at the site is completed, the site is removed and points are scored.
    Sites typically represent alien activities, civilian emergencies, or special operations.

    Relationships:
    - Inherits from TLocation for basic positioning functionality
    - Uses TSiteType to determine appearance and tactical battle configuration
    - References map_blocks for tactical battle generation
    - Generated by the game's mission system based on global events
    - Removed after mission completion, with scoring impact
    - Unlike UFOs, sites do not move around the globe
    """
    def __init__(self, loc_id, data):
        super().__init__(loc_id, data)

        from engine.engine.game import TGame
        self.game: TGame = TGame()

        site_type = data.get('site_type')
        self.site_type  = self.game.mod.sites.get(site_type)

        # Use map_blocks from type if not present in instance data
        self.map_blocks = self.generate_random_map_blocks()

    def generate_random_map_blocks(self, num_blocks=4):
        """
        Generate a random map_blocks dictionary for the site.
        num_blocks: number of blocks to generate (default 4)
        Returns a dict with block names as keys and random types as values.
        """
        import random
        block_types = ['urban', 'forest', 'farm', 'desert', 'mountain']
        return {f'block_{i+1}': random.choice(block_types) for i in range(num_blocks)}

        # TODO fix this
